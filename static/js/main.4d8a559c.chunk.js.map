{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBounday","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","friends","fetch","then","resp","json","users","filteredFriends","filter","friend","toLowerCase","includes","length","ErrorBoundary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAgBeA,EAdF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,GAAIC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MACjB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,wCAAsC,EAAHL,EAAnC,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,WCYLI,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACIV,GAAMO,EAAOG,GAAGV,GAChBC,KAAQM,EAAOG,GAAGT,KAClBC,MAASK,EAAOG,GAAGR,OAHVK,EAAOG,GAAGV,UCKhCW,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBAAOT,UAAU,6BACjBU,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCEPI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAU,SAAUC,OAAO,SAAxC,SACKpB,EAAMqB,YCmBJC,E,kDArBX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDuB,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,0DAGAG,KAAK3B,MAAMqB,a,GAjBHQ,aCoDZC,G,wDA7CX,aAAgB,IAAD,8BACX,gBAOJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAP1C,EAAKZ,MAAQ,CACTa,QAAS,GACTH,YAAY,IAJL,E,gEAYM,IAAD,OAChBI,MAAM,8CAA8CC,MAChD,SAAAC,GAAI,OAAIA,EAAKC,UACfF,MACE,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAEQ,QAASK,S,+BAIhC,IAAD,EAC0Bd,KAAKJ,MAA7Ba,EADF,EACEA,QAASH,EADX,EACWA,YACVS,EAAkBN,EAAQO,QAAO,SAAAC,GACnC,OAAOA,EAAO1C,KAAK2C,cAAcC,SAASb,EAAYY,kBAE1D,OAAuB,IAAnBT,EAAQW,OACD,4CAIH,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWS,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAACiB,EAAD,UACI,cAAC,EAAD,CAAUxC,OAAUkC,e,GApC9Bb,cCIHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d8a559c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {id, name, email} = props;\r\n    return (\r\n        <div className='bg-light-yellow tc dib br3 pa3 ma2 bw2 grow shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/set_set3/${id*3}?size=200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card key = {robots[i].id}\r\n                            id = {robots[i].id}\r\n                            name = {robots[i].name}\r\n                            email = {robots[i].email}\r\n                        />\r\n                    );\r\n                }) \r\n             }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input className='ba b--yellow bg-washed-red' \r\n            type='search' \r\n            placeholder='search friends' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll', height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component} from 'react'\r\n\r\nclass ErrorBounday extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. An error happens!</h1>\r\n        }\r\n        else {\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBounday;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n// import {robots} from './robots';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            friends: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(\r\n            resp => resp.json()\r\n        ).then(\r\n            users => this.setState({ friends: users})\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {friends, searchfield} = this.state;\r\n        const filteredFriends = friends.filter(friend => {\r\n            return friend.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (friends.length === 0){\r\n            return <h1>loading...</h1>\r\n        } \r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Boulder Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <Cardlist robots = {filteredFriends} />\r\n                        </ErrorBoundary>\r\n                        \r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}